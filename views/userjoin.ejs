<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>회원가입페이지</title>
  </head>
  <body>
    <form id="joinForm" action="/memberjoin" method="POST">
      <div class="validation">
        <input
          type="text"
          name="username"
          placeholder="아이디 입력"
          class="users"
        />
        <p class="message"></p>
      </div>
      <div class="validation">
        <input
          type="text"
          name="userpass"
          placeholder="비밀번호 입력"
          class="users"
        />
        <p class="message"></p>
      </div>
      <button id="joinBtn" type="submit">회원가입</button>
      <button id="cancelBtn" type="button">취소</button>
    </form>
    <script>
      //취소버튼 클릭시 메인페이지로 이동
      const cancelBtn = document.querySelector("#cancelBtn");
      cancelBtn.addEventListener("click", function () {
        location.href = "/"; //메인경로로 요청
      });
    </script>
    <script>
      //1.태그 선택하기 (input태그와 버튼)
      const users = document.querySelectorAll(".users");
      const submitBtn = document.querySelector("#joinBtn");

      //2. 필요한 데이터 정리정돈
      let dataList = [
        {
          regexCheck: /^\w{6,10}$/,
          okMessage: "아이디 제대로 입력하였음",
          noMessage: "6자리부터 10자리까지 영문,숫자,_기호만 가능합니다",
          yesOrno: false,
        },
        {
          regexCheck: /^[\w\#\$\!\*]{4,8}$/,
          okMessage: "비번 제대로 입력하였음",
          noMessage: "4자리부터 8자리까지 영문,숫자,#,$,!,* 기호만 가능합니다",
          yesOrno: false,
        },
      ];

      let lastCheck = false; //dataList안에 yesOrno 값이 전부 true일때 true값으로 변경

      //3.키보드 이벤트 keyup
      users.forEach(function (item, index) {
        //keyup이벤트 각각 input태그에 달아줌
        item.addEventListener("keyup", function () {
          inputCheck(item, dataList[index]); //정규표현식체크/조건문 리팩토링 과정 들어간 함수
        });
      });

      //4.inputCheck 함수 정의 구간
      function inputCheck(tag, data) {
        let values = tag.value;
        let checkComp = data.regexCheck.test(values);

        if (checkComp) {
          //해당 인풋태그의 부모를 선택해서 클래스 이름 변경{성공}
          tag.parentElement.className = "validation ok";
          //성공메세지 출력
          tag.nextElementSibling.innerHTML = data.okMessage;
          //yesOrno에 true값으로 변경
          data.yesOrno = true;
          console.log(data.yesOrno);
        } else {
          //해당 인풋태그의 부모를 선택해서 클래스 이름 변경{실패}
          tag.parentElement.className = "validation no";
          //실패메세지 출력
          tag.nextElementSibling.innerHTML = data.noMessage;
          //yesOrno에 false값으로 변경
          data.yesOrno = false;
          console.log(data.yesOrno);
        }
      }

      //5.버튼을 눌렀을 때 yesOrno가 전부 true면 -> lastCheck true;
      //하나라도 false가 걸리면 -> lastCheck false로
      //every() <--여러개의 데이터값이 특정조건에 맞다면 true 아니면 false값

      submitBtn.addEventListener("click", function (event) {
        //every함수로 해당 프로퍼티들 값이 true면 lastCheck도 true
        //하나라도 false라면 lastCheck는 false
        lastCheck = dataList.every((element) => element.yesOrno == true);
        //true
        if (lastCheck) {
          alert("입력사항이 확인되었습니다");
          submitBtn.submit();
        } //false
        else {
          alert("필수입력사항 다시 체크해보세요");
        }
      });
    </script>
  </body>
</html>
